
language: c

compiler:
  - clang
  - gcc

os:
  - linux

sudo: false

env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out

cache:
  apt: true

addons:
  apt:
    packages:
      - libssl-dev
      - libjansson-dev
      - libevent-dev

matrix:
  fast_finish: true
  include:
#    - compiler: ": ARM"
#      env: HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf libjansson-dev libssl-dev libevent-dev" DEP_OPTS="" GOAL="install" PICOCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
#    - compiler: ": 32-bit + dash"
#      env: HOST=i686-pc-linux-gnu PACKAGES="g++-multilib libjansson-dev libssl-dev libevent-dev" RUN_TESTS=true GOAL="install" PICOCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash"
    - compiler: ": picocoin"
      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS="DEBUG=1" RUN_TESTS=true GOAL="install" PICOCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"

script:
  - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
  - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
  - PICOCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export CCACHE_READONLY=1; fi
  - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
  - ./configure --cache-file=config.cache $PICOCOIN_CONFIG_ALL $PICOCOIN_CONFIG || ( cat config.log && false)
  - make distdir PACKAGE=picocoin VERSION=$HOST
  - cd picocoin-$HOST
  - make -s $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL ; false )
  - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
  - if [ "$RUN_TESTS" = "true" ]; then make check; fi

after_script:
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp -r $BASE_OUTDIR server" || echo "upload failed"); fi

